#!/bin/bash
#
#    orange-box-status-all-nodes - query amt status of each node
#    Copyright (C) 2014 Canonical Ltd.
#
#    Authors: Ronald McCollam <ronald.mccollam@canonical.com>
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, version 3 of the License.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.


export AMT_PASSWORD=Password1+
ERRORS=0

okay() {
	echo "OK:    $@"
}

error() {
	echo "ERROR: $@"
	ERRORS=$((ERRORS+1))
}


# Check VM node
if ps -ef | grep -qs "kvm.*node0vm0.maas" >/dev/null 2>&1; then
	okay "[node0vm0]: is running"
else
	error "[node0vm0]: is not running"
fi
uptime=$(ssh node0vm0.maas "uptime" 2>/dev/null)
if [ -n "$uptime" ]; then
	okay "[node0vm0]: SSH to node successful; uptime=[$uptime]"
else
	error "[node0vm0]: SSH to node unsuccessful; uptime=[$uptime]"
fi

# Check all AMT nodes
for i in $(seq 1 9); do
	# (1) Ping AMT IP Addresses
	if ping -c 1 -q 10.14.4.$i >/devnull 2>&1; then
		okay "[node${i}]: AMT responding to ping"
	else
		error "[node${i}]: AMT not responding to ping"
	fi
	# (2) If AMT pingable, check for AMT open port 16992
	if netcat -z -v 10.14.4.$i 16992 >/devnull 2>&1; then
		okay "[node${i}]: AMT listening on port [16992]"
	else
		error "[node${i}]: AMT not listening on port [16992]"
	fi
	amtoutput=$(yes | amttool 10.14.4.1${i} info)
	amtpowerstate=$(echo "$amtoutput" | grep "^Powerstate:" | awk '{print $2}')
	# (3) If AMT port open, check AMT for power state
	if [ -n "$amtpowerstate" ]; then
		okay "[node${i}]: AMT powerstate [$amtpowerstate]"
	else
		error "[node${i}]: AMT powerstate unknown [$amtpowerstate]"
	fi
	# (5) If power state is running, test pingable OS
	if ping -c 1 -q node${i}.maas >/devnull 2>&1; then
		okay "[node${i}]: Responding to ping"
	else
		error "[node${i}]: Not responding to ping"
	fi
	uptime=$(ssh node${i}.maas "uptime" 2>/dev/null)
	# (5) If OS is pingable, test SSH to OS
	if [ -n "$uptime" ]; then
		okay "[node${i}]: SSH to node successful; uptime=[$uptime]"
	else
		error "[node${i}]: SSH to node unsuccessful; uptime=[$uptime]"
	fi
done

if [ $ERRORS -eq 0 ]; then
	exit 0
else
	exit $ERRORS
fi
