#!/bin/sh

# This script assumes that it's being run as root. We should probably 
# check for that in a future revision.

set -e
set -x

# Configure NAT and IP forwarding, giving slave NUCs external network access 
# through the master.

# Note that this script assumes no existing iptables rules. If you do have
# any, they will be deleted. 

# Enable IP forwarding and save for next boot
echo 1 > /proc/sys/net/ipv4/ip_forward
echo "net.ipv4.ip_forward=1" > /etc/sysctl.d/10-maas-ip-forward
#sysctl net.ipv4.ip_forward=1

# Some things use the MAAS proxy - some things don't. So turn on NAT.
# First we blow away the existing postrouting/NAT config.

iptables -F POSTROUTING || true
iptables -F -t nat

iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE
iptables -A FORWARD -i eth0 -o em1 -m state --state RELATED,ESTABLISHED -j ACCEPT
iptables -A FORWARD -i em1 -o eth0 -j ACCEPT

# Ubuntu for some reason does not install requirements for iptables 
# to be persisted across reboots. So let's fix that.

apt-get update
apt-get install iptables-persistent

iptables-save > /etc/iptables/rules.v4

# Set nameserver information - add 10.0.0.1 as first nameserver and configure
# forwarder

echo "DNS server I should forward to when I don't know the answer: "
read dnsserver

if [ "$dnsserver" != "" ]; then
	cat > /etc/bind/resolv.conf.options << EOF
options {
	directory "/var/cache/bind";
	forwarders {
		$dnsserver;
	};
	dnssec-validation auto;
	auth-nxdomain no;    # conform to RFC1035
	listen-on-v6 { any; };
};
EOF
	service bind9 restart

	cat > /etc/resolvconf/resolv.conf.d/head << EOF
# Dynamic resolv.conf(5) file for glibc resolver(3) generated by resolvconf(8)
#     DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN
nameserver $dnsserver
search master
EOF
	resolvconf -u
fi



