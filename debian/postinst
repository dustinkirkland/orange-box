#!/bin/sh

set -e
set -x

PKG="orange-box"
RETRY=120

. /usr/lib/orange-box/inc/common

setup_maas_admin() {
	# Configure the MAAS admin user
	# Sadly, there's no way to test if the user has been created already,
	# so ignore errors for idempotence
	maas-region-admin createadmin --username admin --email maas-admin@example.com --password="admin" 2>/dev/null || true
}

setup_maas_networking() {
	. /etc/maas/maas_cluster.conf
	APIKEY=$(maas-region-admin apikey --username admin)
	maas login admin $MAAS_URL $APIKEY
	count=0
	while ! maas admin node-group-interfaces list $CLUSTER_UUID >/dev/null 2>&1; do
		count=$((count+1))
		sleep 1
		if [ $count -gt $RETRY ]; then
			error "[maas admin node-group-interfaces list] failed [$RETRY] times"
		fi
	done
	internal_interface=$(route -n | grep "^10\.14\." | sed -e "s/.* //")
	# Support MAAS 1.5, and 1.6
	maas_ver=$(dpkg -l maas | tail -n1 | awk '{print $3}')
	if dpkg --compare-versions $maas_ver lt 1.6; then
		maas admin node-group-interface update $CLUSTER_UUID $internal_interface ip_range_low=10.14.100.1 ip_range_high=10.14.199.254 management=2 broadcast_ip=10.14.255.255 router_ip=10.14.4.1
	else
		maas admin node-group-interface update $CLUSTER_UUID $internal_interface ip_range_low=10.14.50.1 ip_range_high=10.14.99.254 static_ip_range_low=10.14.100.1 static_ip_range_high=10.14.199.254 management=2 broadcast_ip=10.14.255.255 router_ip=10.14.4.1
	fi
	# Setup nat
	# Ensure we have an external connection
	run-one-until-success ping -c 3 maas.ubuntu.com
	orange-box-setup-nat
	# Redirect to MAAS web interface
	cat >/var/www/html/index.html <<EOF
<meta http-equiv="refresh" content="0; url=/MAAS">
EOF
}

setup_dns() {
	# Set MAAS upstream DNS
	external_interface=$(ip route ls | grep ^default | awk '{print $5}')
	dns=$(nmcli d list iface $external_interface | grep -m 1 "^IP4.DNS" | awk '{ print $2 }')
	maas admin maas set-config name=upstream_dns value=$dns
	sed -i -e "/^nameserver 10.14.4.1$/d" /etc/resolvconf/resolv.conf.d/head
	echo "nameserver 10.14.4.1" >> /etc/resolvconf/resolv.conf.d/head
	resolvconf -u
	invoke-rc.d squid-deb-proxy restart
}

setup_squid() {
	# This is now a transparent proxy
	cat /usr/lib/orange-box/inc/squid.conf > /etc/squid-deb-proxy/squid-deb-proxy.conf
	cat /usr/lib/orange-box/inc/squid.conf > /etc/squid3/squid.conf
	invoke-rc.d squid3 stop || true
	update-rc.d -f squid3 remove
	invoke-rc.d squid-deb-proxy restart
	#maas admin maas set-config name=http_proxy value=http://10.14.4.1:3128
}

setup_local_mirror() {
	# Set up the local mirror
	a2ensite archive
	a2ensite ubuntu-cloud
	a2dissite 000-default
	mkdir -p /srv/mirrors/archive.ubuntu.com
	echo '<meta http-equiv="refresh" content="0; url=MAAS/">' > /srv/mirrors/archive.ubuntu.com/index.html
	invoke-rc.d apache2 restart
	# Sync the charm store to /srv/charmstore
	# Note: This is going to take a LONG time
	orange-box-sync-charmstore &
}

setup_boot_resources() {
	# Use our boot resources as found on the external storage
	if [ -e /var/lib/maas/boot-resources ]; then
		mv -f /var/lib/maas/boot-resources /var/lib/maas/boot-resources.orig
	fi
	if [ ! -e /srv/boot-resources ]; then
		mkdir -p /srv/boot-resources
	fi
	ln -sf /srv/boot-resources /var/lib/maas/
	# Importing boot resources
	# If these were recently imported, they should be available in /srv
	# and this should be fast;  if not, this might take a long time
	# MAAS won't work very well until this is done, so we're going to block
	# until this completes
	# Network access may not be immediately available;
	# wait until we can talk to maas
	run-one-until-success ping -c 3 maas.ubuntu.com
	# Support MAAS 1.5, and 1.6
	maas_ver=$(dpkg -l maas | tail -n1 | awk '{print $3}')
	if dpkg --compare-versions $maas_ver lt 1.6; then
		cat /usr/lib/orange-box/inc/bootresources_1.5.yaml > /etc/maas/bootresources.yaml
		run-this-one maas-import-pxe-files --config-file /etc/maas/bootresources.yaml
	else
		cat /usr/lib/orange-box/inc/bootresources_1.6.yaml > /etc/maas/bootresources.yaml
		run-this-one maas-import-pxe-files --sources-file /etc/maas/bootresources.yaml
	fi
}

setup_desktop() {
	sudo -u ubuntu dbus-launch gsettings set org.gnome.desktop.background picture-uri file:///usr/share/orange-box/orange-box-background.png
	sudo -u ubuntu dbus-launch gsettings set com.canonical.Unity.Launcher favorites "['firefox.desktop', 'byobu.desktop', 'remmina.desktop']"
	sudo -u ubuntu dbus-launch gsettings set org.gnome.desktop.session idle-delay 999999
	sudo -u ubuntu dbus-launch gsettings set org.gnome.desktop.screensaver idle-activation-enabled false
	sudo -u ubuntu dbus-launch gsettings set org.gnome.desktop.screensaver lock-enabled false
	if [ -e /etc/lightdm/lightdm.conf ]; then
		sed -i -e "/autologin-user=/d" /etc/lightdm/users.conf
		echo "autologin-user=ubuntu" >> /etc/lightdm/users.conf
	fi
	echo "enabled=0" > /etc/default/apport
	invoke-rc.d apport stop || true
}

setup_ssh_keys() {
	# Disable remote password authentication, since our username/password
	# combo is very well known
	if ! grep -qs "^PasswordAuthentication no" /etc/ssh/sshd_config 2>/dev/null; then
		echo "PasswordAuthentication no" >> /etc/ssh/sshd_config
		invoke-rc.d ssh restart
	fi
	if [ ! -e /home/ubuntu/.ssh/id_rsa ]; then
		su -l ubuntu -c "ssh-keygen -N '' -f /home/ubuntu/.ssh/id_rsa"
	fi
	maas admin sshkeys new key="$(cat /home/ubuntu/.ssh/id_rsa.pub)" || true
	if ! grep -qs "^Host.*maas$" /home/ubuntu/.ssh/config; then
		cat <<EOF >>/home/ubuntu/.ssh/config

Host *.maas
UserKnownHostsFile /dev/null
StrictHostKeyChecking no
CheckHostIP no

EOF
	fi
	chmod 600 /home/ubuntu/.ssh/config
	chown -R ubuntu:ubuntu /home/ubuntu/.ssh/config
}

setup_juju() {
	mkdir -p /home/ubuntu/.juju
	cat >/home/ubuntu/.juju/environments.yaml <<EOF
default: maas
environments:
    maas:
        type: maas
        maas-server: 'http://10.14.4.1/MAAS/'
        maas-oauth: '$APIKEY'
        default-series: precise
        authorized-keys-path: /home/ubuntu/.ssh/id_rsa.pub
        admin-secret: 'admin'
        logging-config: '<root>=DEBUG'
EOF
	rm -rf /home/ubuntu/.juju-plugins
	git clone https://github.com/juju/plugins /home/ubuntu/.juju-plugins
	sudo chown -R ubuntu:ubuntu /home/ubuntu/
	echo "PATH=\$PATH:/home/ubuntu/.juju-plugins" >> /home/ubuntu/.bashrc
	#Required for local charm deployments to work.
	sed -i -e '/^export JUJU_REPOSITORY=/d' /home/ubuntu/.bashrc
	echo "export JUJU_REPOSITORY=/srv/charmstore" >> /home/ubuntu/.bashrc
}

ensure_running() {
	job="$1"
	count=1
	while true; do
		if (status $job | grep -qs "start/running,"); then
			break
		fi
		invoke-rc.d $job start
		sleep 1
		count=$((count+1))
		if [ $count -gt $RETRY ]; then
			error "[$job] refused to start [$RETRY] times"
		fi
	done
}

ensure_running_maas() {
	ensure_running maas-region-celery
	ensure_running maas-cluster-celery
	ensure_running maas-txlongpoll
	ensure_running maas-pserv
	ensure_running maas-dhcp-server
	invoke-rc.d tgt restart
	ensure_running tgt
}

setup_all_nodes() {
	# Ensure that pxe and dhcp are running
	ensure_running_maas
	maas admin node-groups import-boot-images
	orange-box-add-physical-nodes
	orange-box-add-virtual-nodes
}

apply_patches() {
	# This is a DISGUSTING HACK that needs to go away
	# as soon as MAAS ships these fixes
	cd /
	cat /usr/lib/orange-box/patches/arp_ip_order.patch | patch -p0 -N || true
	cat /usr/lib/orange-box/patches/try_amt_harder.patch | patch -p0 -N || true
	cd -
	rm -f /usr/lib/python2.7/dist-packages/provisioningserver/utils/__init__.pyc
	invoke-rc.d maas-cluster-celery restart
}

setup_landscape() {
	# The master node will be managed by Landscape
	# TODO: this is currently hardcoded to our own landscape account
	case "$(hostname)" in
		OrangeBox*|orangebox*)
			landscape-config -a canonical-orange -t "$(hostname)__$(dmidecode -s baseboard-serial-number)" -p ubuntu-aubergine --script-users=ALL --silent --include-manager-plugins=ScriptExecution || true
		;;
	esac
}

setup_examples() {
	mkdir -p /home/ubuntu
	if [ -d /home/ubuntu/Examples/.bzr ]; then
		bzr pull lp:orange-box-examples || true
	elif [ -d /home/ubuntu/Examples ]; then
		mv -f /home/ubuntu/Examples /home/ubuntu/.Examples
		bzr branch lp:orange-box-examples /home/ubuntu/Examples || true
	else
		bzr branch lp:orange-box-examples /home/ubuntu/Examples || true
	fi
	chown -R ubuntu:ubuntu /home/ubuntu
}

case "$1" in
	configure)
		setup_desktop
		apply_patches
		if [ -n "$2" ]; then
			echo
			echo "INFO: Skipping importing boot resources, since this is a package upgrade"
			echo "INFO: If you want to update boot resources, run:"
			echo "INFO:   sudo maas-import-pxe-files"
			echo "INFO:   sudo maas admin node-groups import-boot-images"
			echo
		else
			setup_boot_resources
		fi
		setup_maas_admin
		setup_maas_networking
		setup_squid
		setup_local_mirror
		setup_ssh_keys
		setup_juju
		setup_dns
		setup_landscape
		if [ -n "$2" ]; then
			echo
			echo "INFO: Skipping adding all nodes, since this is a package upgrade"
			echo "INFO: If you want to delete and add all nodes again, run:"
			echo "INFO:   sudo orange-box-add-physical-nodes"
			echo "INFO:   sudo orange-box-add-virtual-nodes"
			echo
		else
			# Only add all nodes on initial install, not upgrades
			setup_all_nodes
		fi
		setup_examples
	;;
	abort-upgrade|abort-remove|abort-deconfigure)
	;;
	*)
		echo "postinst called with unknown argument \`$1'" >&2
	exit 1
	;;
esac

#DEBHELPER#

exit 0
