#!/bin/sh

set -e
set -x

PKG="orange-box"
RETRY=120

. /usr/lib/orange-box/inc/common

setup_maas_admin() {
	# Configure the MAAS admin user
	# Sadly, there's no way to test if the user has been created already,
	# so ignore errors for idempotence
	maas-region-admin createadmin --username admin --email maas-admin@example.com --password="admin" 2>/dev/null || true
}

setup_maas_networking() {
	. /etc/maas/maas_cluster.conf
	APIKEY=$(maas-region-admin apikey --username admin)
	maas login admin $MAAS_URL $APIKEY
	count=0
	while ! maas admin node-group-interfaces list $CLUSTER_UUID >/dev/null 2>&1; do
		count=$((count+1))
		sleep 1
		if [ $count -gt $RETRY ]; then
			error "[maas admin node-group-interfaces list] failed [$RETRY] times"
		fi
	done
	internal_interface=$(route -n | grep "^10\.14\.4\." | sed -e "s/.* //")
	maas admin node-group-interface update $CLUSTER_UUID $internal_interface ip_range_high=10.14.4.250 ip_range_low=10.14.4.50 management=2 broadcast_ip=10.14.4.255 router_ip=10.14.4.1
	# Set MAAS upstream DNS
	dns=$(nmcli d list iface $internal_interface | grep -m 1 "^IP4.DNS" | awk '{ print $2 }')
	maas admin maas set-config name=upstream_dns value=$dns
	# Setup nat
	local Iface Destination Gateway Flags RefCnt Use Metric Mask MTU Window IRTT
	while read Iface Destination Gateway Flags RefCnt Use Metric Mask MTU Window IRTT; do
		[ "$Mask" = "00000000" ] && break
	done < /proc/net/route
	external_interface="$Iface"
	orange-box-setup-nat $internal_interface $external_interface
}

setup_resolv() {
	sed -i -e "/^nameserver 10.14.4.1$/d" /etc/resolvconf/resolv.conf.d/head
	echo "nameserver 10.14.4.1" >> /etc/resolvconf/resolv.conf.d/head
	resolvconf -u
}

setup_squid() {
	cat /usr/lib/orange-box/inc/squid.conf > /etc/squid3/squid.conf
	invoke-rc.d squid3 restart
}

setup_local_mirror() {
	# Set up the local mirror
	a2ensite archive
	a2ensite ubuntu-cloud
	a2dissite 000-default
	invoke-rc.d apache2 restart
}

setup_boot_resources() {
	# Use our boot resources as found on the external storage
	if [ -e /var/lib/maas/boot-resources ]; then
		mv -f /var/lib/maas/boot-resources /var/lib/maas/boot-resources.orig
	fi
	if [ ! -e /srv/boot-resources ]; then
		mkdir -p /srv/boot-resources
	fi
	ln -sf /srv/boot-resources /var/lib/maas/
	# Importing boot resources
	# If these were recently imported, they should be available in /srv
	# and this should be fast;  if not, this might take a long time
	# MAAS won't work very well until this is done, so we're going to block
	# until this completes
	run-this-one maas-import-pxe-files
	# TODO: This following line doesn't actually cause MAAS to notice the pxe boot images, unfortunately
	invoke-rc.d maas-cluster-celery restart
}

setup_desktop() {
	su -l ubuntu -c "gsettings set org.gnome.desktop.background picture-uri file:///usr/share/orange-box/orange-box-background.png"
	su -l ubuntu -c "gsettings set com.canonical.Unity.Launcher favorites \"['firefox.desktop', 'byobu.desktop', 'remmina.desktop']\""
	su -l ubuntu -c "gsettings set org.gnome.desktop.session idle-delay 0"
	su -l ubuntu -c "gsettings set org.gnome.desktop.screensaver idle-activation-enabled false"
	su -l ubuntu -c "gsettings set org.gnome.desktop.screensaver lock-enabled false"
}

setup_ssh_keys() {
	# Disable remote password authentication, since our username/password
	# combo is very well known
	if ! grep -qs "^PasswordAuthentication no" /etc/ssh/sshd_config 2>/dev/null; then
		echo "PasswordAuthentication no" >> /etc/ssh/sshd_config
		invoke-rc.d ssh restart
	fi
	if [ ! -e /home/ubuntu/.ssh/id_rsa ]; then
		su -l ubuntu -c "ssh-keygen -N '' -f /home/ubuntu/.ssh/id_rsa"
	fi
	maas admin sshkeys new key="$(cat /home/ubuntu/.ssh/id_rsa.pub)" || true
	if ! grep -qs "^Host.*maas$" /home/ubuntu/.ssh/config; then
		cat <<EOF >>/home/ubuntu/.ssh/config

Host *.maas
UserKnownHostsFile /dev/null
StrictHostKeyChecking no
CheckHostIP no

EOF
	fi
	chmod 600 /home/ubuntu/.ssh/config
	chown -R ubuntu:ubuntu /home/ubuntu/.ssh/config
	rm -rf /home/ubuntu/examples
	cp -a /usr/share/doc/orange-box/examples /home/ubuntu/
	chown -R ubuntu:ubuntu /home/ubuntu/examples
}

setup_juju() {
	mkdir -p /home/ubuntu/.juju
	cat >/home/ubuntu/.juju/environments.yaml <<EOF
default: maas
environments:
    maas:
        type: maas
        maas-server: 'http://10.14.4.1/MAAS/'
        maas-oauth: '$APIKEY'
        default-series: precise
        authorized-keys-path: /home/ubuntu/.ssh/id_rsa.pub
        admin-secret: 'admin'
EOF
	sudo chown -R ubuntu:ubuntu /home/ubuntu/
}

ensure_running() {
	job="$1"
	count=1
	while true; do
		if (status $job | grep -qs "start/running,"); then
			break
		fi
		invoke-rc.d $job start
		sleep 1
		count=$((count+1))
		if [ $count -gt $RETRY ]; then
			error "[$job] refused to start [$RETRY] times"
		fi
	done
}

ensure_running_maas() {
	ensure_running maas-region-celery
	ensure_running maas-cluster-celery
	ensure_running maas-txlongpoll
	ensure_running maas-pserv
	ensure_running maas-dhcp-server
	invoke-rc.d tgt restart
	ensure_running tgt
}

setup_all_nodes() {
	# Ensure that pxe and dhcp are running
	ensure_running_maas
	orange-box-add-all-nodes
	#orange-box-add-virtual-nodes
}

apply_patches() {
	# This is a DISGUSTING HACK that needs to go away
	# as soon as MAAS ships these fixes
	cd /
	cat /usr/lib/orange-box/patches/arp_ip_order.patch | patch -p0
	cat /usr/lib/orange-box/patches/try_amt_harder.patch | patch -p0
	cd -
	rm -f /usr/lib/python2.7/dist-packages/provisioningserver/utils/__init__.pyc
	invoke-rc.d maas-cluster-celery restart
}

case "$1" in
	configure)
		setup_desktop
		apply_patches
		setup_boot_resources
		setup_maas_admin
		setup_maas_networking
		setup_squid
		setup_local_mirror
		setup_ssh_keys
		setup_juju
		setup_all_nodes
		setup_resolv
	;;
	abort-upgrade|abort-remove|abort-deconfigure)
	;;
	*)
		echo "postinst called with unknown argument \`$1'" >&2
	exit 1
	;;
esac

#DEBHELPER#

exit 0
